<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scala on life and code · in small doses</title><link>https://angstrom.io/tags/scala/</link><description>Recent content in Scala on life and code · in small doses</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 01 Feb 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://angstrom.io/tags/scala/index.xml" rel="self" type="application/rss+xml"/><item><title>Have TwitterServer Will Test</title><link>https://angstrom.io/2016/02/01/have-twitterserver-will-test/</link><pubDate>Mon, 01 Feb 2016 00:00:00 +0000</pubDate><guid>https://angstrom.io/2016/02/01/have-twitterserver-will-test/</guid><description>Did you know you can use Finatra’s Feature Tests utilities for testing any TwitterServer? That is, you can start a locally running server and write tests which issue requests to it as long the server extends from c.t.server.TwitterServer. It doesn’t specifically have to be a Finatra server.
Recent changes to Finatra testing utilities allow for any arbitrary TwitterServer to be able to create Feature Tests and a very useful type of Feature Test is a simple Startup Test where you can verify your server starts and is configured how you would expect.</description></item><item><title>A Simple Finatra Example Project</title><link>https://angstrom.io/2015/07/12/a-simple-finatra-example-project/</link><pubDate>Sun, 12 Jul 2015 21:50:36 -0700</pubDate><guid>https://angstrom.io/2015/07/12/a-simple-finatra-example-project/</guid><description>Over the past year-and-a-half I&amp;rsquo;ve helped to develop a Scala framework for writing services on-top of parts of the Twitter stack, namely TwitterServer and Finagle. This framework is called Finatra and we&amp;rsquo;ve recently published a second milestone release of the completely-rebuilt-from-the-ground-up version 2.x.
Checkout out the blog post announcing the new version with more details on framework features.
In this post we&amp;rsquo;ll write small Finatra example service; a simple URL-shortener using Redis.</description></item><item><title>Accumulator Generator in Scala</title><link>https://angstrom.io/2013/02/12/accumulator-generator-in-scala/</link><pubDate>Tue, 12 Feb 2013 00:00:00 +0000</pubDate><guid>https://angstrom.io/2013/02/12/accumulator-generator-in-scala/</guid><description>The Problem https://www.paulgraham.com/accgen.html
The Solution</description></item></channel></rss>